# v0.8.0-rc1 - Development Version with Debugging Support

# Base node image
FROM node:20-alpine AS node

# Install jemalloc and development tools
RUN apk add --no-cache jemalloc
RUN apk add --no-cache python3 py3-pip uv

# Set environment variable to use jemalloc
ENV LD_PRELOAD=/usr/lib/libjemalloc.so.2

# Add `uv` for extended MCP support
COPY --from=ghcr.io/astral-sh/uv:0.6.13 /uv /uvx /bin/
RUN uv --version

RUN mkdir -p /app && chown node:node /app
WORKDIR /app

USER node

# Copy source code first to avoid workspace conflicts
COPY --chown=node:node . .

RUN \
    # Allow mounting of these files, which have no default
    touch .env ; \
    # Create directories for the volumes to inherit the correct permissions
    mkdir -p /app/client/public/images /app/api/logs ; \
    npm config set fetch-retry-maxtimeout 600000 ; \
    npm config set fetch-retries 5 ; \
    npm config set fetch-retry-mintimeout 15000 ; \
    npm install --no-audit

# Development mode - build only essential packages for debugging
# Skip frontend build as we'll use dev server with hot reload
RUN npm run build:data-provider && npm run build:data-schemas

RUN mkdir -p /app/client/public/images /app/api/logs

# Expose ports for debugging
# 3080 - API server
# 9229 - Node.js debugger
# 3000 - React dev server (if running separately)
EXPOSE 3080 9229 3000

ENV HOST=0.0.0.0
ENV NODE_ENV=development

# Start with debugging enabled
CMD ["node", "--inspect=0.0.0.0:9229", "api/server/index.js"]