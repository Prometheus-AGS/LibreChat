# Development Docker Compose with Full Debugging Support
# Use this file for development with: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up

services:
  api:
    container_name: LibreChat-Dev
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        - NODE_ENV=development
    ports:
      - '${PORT:-3080}:3080'
      - '9229:9229' # Node.js debugger port
      - '3000:3000' # React dev server port (if needed)
    depends_on:
      - mongodb
      - rag_api
    restart: 'no' # Don't auto-restart in dev mode
    user: '${UID:-1000}:${GID:-1000}'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    environment:
      - HOST=0.0.0.0
      - NODE_ENV=development
      - DEBUG=librechat:*
      - MONGO_URI=mongodb://mongodb:27017/LibreChat
      - MEILI_HOST=http://meilisearch:7700
      - RAG_PORT=${RAG_PORT:-8000}
      - RAG_API_URL=http://rag_api:${RAG_PORT:-8000}
    env_file:
      - .env
    volumes:
      # Mount source code for hot reload
      - type: bind
        source: ./.env
        target: /app/.env
      - type: bind
        source: ./api
        target: /app/api
      - type: bind
        source: ./client
        target: /app/client
      - type: bind
        source: ./packages
        target: /app/packages
      - type: bind
        source: ./librechat.yaml
        target: /app/librechat.yaml
        read_only: true
      # Persistent volumes
      - librechat_images:/app/client/public/images
      - librechat_uploads:/app/uploads
      - librechat_logs:/app/logs
      # Node modules cache (commented out - was overriding installed dependencies)
      # - librechat_node_modules:/app/node_modules
      # - librechat_api_node_modules:/app/api/node_modules
      # - librechat_client_node_modules:/app/client/node_modules
    command: ['node', '--inspect=0.0.0.0:9229', 'api/server/index.js']

  # Frontend development server (optional - run separately if needed)
  client:
    container_name: LibreChat-Client-Dev
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - '3000:3000'
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    volumes:
      - type: bind
        source: ./client
        target: /app/client
      - type: bind
        source: ./packages
        target: /app/packages
      # - librechat_client_node_modules:/app/client/node_modules
    working_dir: /app/client
    command: ['npm', 'run', 'dev']
    profiles:
      - frontend-dev # Use profile to optionally start this service

  mongodb:
    container_name: chat-mongodb-dev
    image: mongo
    restart: 'no'
    user: '${UID:-1000}:${GID:-1000}'
    ports:
      - '27017:27017' # Expose MongoDB port for debugging
    volumes:
      - librechat_mongodb_data:/data/db
    command: mongod --noauth --bind_ip_all
    environment:
      - MONGO_INITDB_DATABASE=LibreChat

  meilisearch:
    container_name: chat-meilisearch-dev
    image: getmeili/meilisearch:v1.12.3
    restart: 'no'
    user: '${UID:-1000}:${GID:-1000}'
    ports:
      - '7700:7700' # Expose Meilisearch port for debugging
    environment:
      - MEILI_HOST=http://meilisearch:7700
      - MEILI_NO_ANALYTICS=true
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY}
      - MEILI_ENV=development
    volumes:
      - librechat_meili_data:/meili_data

  vectordb:
    container_name: vectordb-dev
    image: ankane/pgvector:latest
    ports:
      - '15432:5432' # Expose PostgreSQL port for debugging
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    restart: 'no'
    volumes:
      - pgdata2_dev:/var/lib/postgresql/data

  rag_api:
    container_name: rag_api-dev
    image: ghcr.io/danny-avila/librechat-rag-api-dev-lite:latest
    ports:
      - '${RAG_PORT:-8000}:${RAG_PORT:-8000}' # Expose RAG API port for debugging
    environment:
      - DB_HOST=vectordb
      - DB_PORT=5432
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - POSTGRES_HOST=vectordb
      - POSTGRES_PORT=5432
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - RAG_PORT=${RAG_PORT:-8000}
      - DEBUG=1
    restart: 'no'
    depends_on:
      - vectordb
    env_file:
      - .env

volumes:
  pgdata2_dev:
  librechat_logs:
  librechat_images:
  librechat_uploads:
  librechat_mongodb_data:
  librechat_meili_data:
  # Commented out - these volumes were overriding installed node_modules
  # librechat_node_modules:
  # librechat_api_node_modules:
  # librechat_client_node_modules:
